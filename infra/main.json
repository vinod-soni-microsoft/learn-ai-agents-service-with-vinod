{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "2627381629836900666"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "eastus",
        "eastus2",
        "swedencentral",
        "westus",
        "westus3"
      ],
      "metadata": {
        "azd": {
          "type": "location",
          "usageName": [
            "OpenAI.GlobalStandard.gpt-4o-mini,80"
          ]
        },
        "description": "Location for all resources"
      }
    },
    "azureExistingAIProjectResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Use this parameter to use an existing AI project resource ID"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure resource group where new resources will be deployed"
      }
    },
    "aiProjectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure AI Foundry Hub resource name. If ommited will be generated"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The application insights resource name. If ommited will be generated"
      }
    },
    "aiServicesName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The AI Services resource name. If ommited will be generated"
      }
    },
    "searchServiceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Search resource name. If ommited will be generated"
      }
    },
    "searchConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Search connection name. If ommited will use a default value"
      }
    },
    "aiSearchIndexName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The search index name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Storage Account resource name. If ommited will be generated"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The log analytics workspace name. If ommited will be generated"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "agentModelFormat": {
      "type": "string",
      "defaultValue": "OpenAI",
      "allowedValues": [
        "Microsoft",
        "OpenAI"
      ],
      "metadata": {
        "description": "Format of the chat model to deploy"
      }
    },
    "agentName": {
      "type": "string",
      "defaultValue": "agent-template-assistant",
      "metadata": {
        "description": "Name of agent to deploy"
      }
    },
    "aiAgentID": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "(Deprecated) ID of agent to deploy"
      }
    },
    "azureExistingAgentId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ID of the existing agent"
      }
    },
    "agentModelName": {
      "type": "string",
      "defaultValue": "gpt-4o-mini",
      "metadata": {
        "description": "Name of the chat model to deploy"
      }
    },
    "agentDeploymentName": {
      "type": "string",
      "defaultValue": "gpt-4o-mini",
      "metadata": {
        "description": "Name of the model deployment"
      }
    },
    "agentModelVersion": {
      "type": "string",
      "defaultValue": "2024-07-18",
      "metadata": {
        "description": "Version of the chat model to deploy"
      }
    },
    "agentDeploymentSku": {
      "type": "string",
      "defaultValue": "GlobalStandard",
      "metadata": {
        "description": "Sku of the chat deployment"
      }
    },
    "agentDeploymentCapacity": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Capacity of the chat deployment"
      }
    },
    "embedModelFormat": {
      "type": "string",
      "defaultValue": "OpenAI",
      "allowedValues": [
        "Microsoft",
        "OpenAI"
      ],
      "metadata": {
        "description": "Format of the embedding model to deploy"
      }
    },
    "embedModelName": {
      "type": "string",
      "defaultValue": "text-embedding-3-small",
      "metadata": {
        "description": "Name of the embedding model to deploy"
      }
    },
    "embeddingDeploymentName": {
      "type": "string",
      "defaultValue": "text-embedding-3-small",
      "metadata": {
        "description": "Name of the embedding model deployment"
      }
    },
    "embeddingDeploymentDimensions": {
      "type": "string",
      "defaultValue": "100",
      "metadata": {
        "description": "Embedding model dimensionality"
      }
    },
    "embedModelVersion": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Version of the embedding model to deploy"
      }
    },
    "embedDeploymentSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Sku of the embeddings model deployment"
      }
    },
    "embedDeploymentCapacity": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Capacity of the embedding deployment"
      }
    },
    "useApplicationInsights": {
      "type": "bool",
      "defaultValue": true
    },
    "useSearchService": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Do we want to use the Azure AI Search"
      }
    },
    "enableAzureMonitorTracing": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Do we want to use the Azure Monitor tracing"
      }
    },
    "azureTracingGenAIContentRecordingEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Do we want to use the Azure Monitor tracing for GenAI content recording"
      }
    },
    "enableAPIM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure API Management for the API"
      }
    },
    "apimPublisherName": {
      "type": "string",
      "defaultValue": "Your Organization",
      "metadata": {
        "description": "APIM Publisher Name"
      }
    },
    "apimPublisherEmail": {
      "type": "string",
      "defaultValue": "admin@yourorg.com",
      "metadata": {
        "description": "APIM Publisher Email"
      }
    },
    "apimSku": {
      "type": "string",
      "defaultValue": "Consumption",
      "allowedValues": [
        "Consumption",
        "Developer",
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "APIM SKU"
      }
    },
    "templateValidationMode": {
      "type": "bool",
      "defaultValue": false
    },
    "seed": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Random seed to be used during generation of new resources suffixes."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "loadTesting": "lt-",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "runnerPrincipalType": "[if(parameters('templateValidationMode'), 'ServicePrincipal', 'User')]",
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[if(parameters('templateValidationMode'), toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location'), parameters('seed'))), toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location'))))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "tempAgentID": "[if(not(empty(parameters('aiAgentID'))), parameters('aiAgentID'), '')]",
    "agentID": "[if(not(empty(parameters('azureExistingAgentId'))), parameters('azureExistingAgentId'), variables('tempAgentID'))]",
    "aiChatModel": [
      {
        "name": "[parameters('agentDeploymentName')]",
        "model": {
          "format": "[parameters('agentModelFormat')]",
          "name": "[parameters('agentModelName')]",
          "version": "[parameters('agentModelVersion')]"
        },
        "sku": {
          "name": "[parameters('agentDeploymentSku')]",
          "capacity": "[parameters('agentDeploymentCapacity')]"
        }
      }
    ],
    "aiEmbeddingModel": [
      {
        "name": "[parameters('embeddingDeploymentName')]",
        "model": {
          "format": "[parameters('embedModelFormat')]",
          "name": "[parameters('embedModelName')]",
          "version": "[parameters('embedModelVersion')]"
        },
        "sku": {
          "name": "[parameters('embedDeploymentSku')]",
          "capacity": "[parameters('embedDeploymentCapacity')]"
        }
      }
    ],
    "aiDeployments": "[concat(variables('aiChatModel'), if(parameters('useSearchService'), variables('aiEmbeddingModel'), createArray()))]",
    "logAnalyticsWorkspaceResolvedName": "[if(not(parameters('useApplicationInsights')), '', if(not(empty(parameters('logAnalyticsWorkspaceName'))), parameters('logAnalyticsWorkspaceName'), format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))))]",
    "resolvedSearchServiceName": "[if(not(parameters('useSearchService')), '', if(not(empty(parameters('searchServiceName'))), parameters('searchServiceName'), format('{0}{1}', variables('abbrs').searchSearchServices, variables('resourceToken'))))]",
    "existingProjEndpoint": "[if(not(empty(parameters('azureExistingAIProjectResourceId'))), format('https://{0}.services.ai.azure.com/api/projects/{1}', split(parameters('azureExistingAIProjectResourceId'), '/')[8], split(parameters('azureExistingAIProjectResourceId'), '/')[10]), '')]",
    "resolvedApplicationInsightsName": "[if(or(not(parameters('useApplicationInsights')), not(empty(parameters('azureExistingAIProjectResourceId')))), '', if(not(empty(parameters('applicationInsightsName'))), parameters('applicationInsightsName'), format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "condition": "[empty(parameters('azureExistingAIProjectResourceId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "storageAccountName": "[if(not(empty(parameters('storageAccountName'))), createObject('value', parameters('storageAccountName')), createObject('value', format('{0}{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))))]",
          "aiServicesName": "[if(not(empty(parameters('aiServicesName'))), createObject('value', parameters('aiServicesName')), createObject('value', format('aoai-{0}', variables('resourceToken'))))]",
          "aiProjectName": "[if(not(empty(parameters('aiProjectName'))), createObject('value', parameters('aiProjectName')), createObject('value', format('proj-{0}', variables('resourceToken'))))]",
          "aiServiceModelDeployments": {
            "value": "[variables('aiDeployments')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsWorkspaceResolvedName')]"
          },
          "applicationInsightsName": "[if(not(parameters('useApplicationInsights')), createObject('value', ''), if(not(empty(parameters('applicationInsightsName'))), createObject('value', parameters('applicationInsightsName')), createObject('value', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken')))))]",
          "searchServiceName": {
            "value": "[variables('resolvedSearchServiceName')]"
          },
          "appInsightConnectionName": {
            "value": "appinsights-connection"
          },
          "aoaiConnectionName": {
            "value": "aoai-connection"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "13614399569370058779"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Primary location for all resources"
              }
            },
            "aiProjectName": {
              "type": "string",
              "metadata": {
                "description": "The AI Project resource name."
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The Storage Account resource name."
              }
            },
            "aiServicesName": {
              "type": "string",
              "metadata": {
                "description": "The AI Services resource name."
              }
            },
            "aiServiceModelDeployments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The AI Services model deployments."
              }
            },
            "logAnalyticsName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Log Analytics resource name."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Application Insights resource name."
              }
            },
            "searchServiceName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Azure Search resource name."
              }
            },
            "appInsightConnectionName": {
              "type": "string",
              "metadata": {
                "description": "The Application Insights connection name."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "aoaiConnectionName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storageAccount",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "containers": {
                    "value": [
                      {
                        "name": "default"
                      }
                    ]
                  },
                  "files": {
                    "value": [
                      {
                        "name": "default"
                      }
                    ]
                  },
                  "queues": {
                    "value": [
                      {
                        "name": "default"
                      }
                    ]
                  },
                  "tables": {
                    "value": [
                      {
                        "name": "default"
                      }
                    ]
                  },
                  "deleteRetentionPolicy": {
                    "value": {
                      "allowPermanentDelete": false,
                      "enabled": false
                    }
                  },
                  "shareDeleteRetentionPolicy": {
                    "value": {
                      "enabled": true,
                      "days": 7
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "5843906047643516470"
                    },
                    "description": "Creates an Azure storage account."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "allowedValues": [
                        "Cool",
                        "Hot",
                        "Premium"
                      ]
                    },
                    "allowBlobPublicAccess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowCrossTenantReplication": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowSharedKeyAccess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "corsRules": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "defaultToOAuthAuthentication": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dnsEndpointType": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "AzureDnsZone",
                        "Standard"
                      ]
                    },
                    "files": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2"
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2"
                    },
                    "queues": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "shareDeleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "supportsHttpsTrafficOnly": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "tables": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "networkAcls": {
                      "type": "object",
                      "defaultValue": {
                        "bypass": "AzureServices",
                        "defaultAction": "Allow"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Standard_LRS"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "storage::blobServices::container",
                        "count": "[length(parameters('containers'))]"
                      },
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "publicAccess": "[if(contains(parameters('containers')[copyIndex()], 'publicAccess'), parameters('containers')[copyIndex()].publicAccess, 'None')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storage::queueServices::queue",
                        "count": "[length(parameters('queues'))]"
                      },
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
                      "properties": {
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "cors": {
                          "corsRules": "[parameters('corsRules')]"
                        },
                        "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('files')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "cors": {
                          "corsRules": "[parameters('corsRules')]"
                        },
                        "shareDeleteRetentionPolicy": "[parameters('shareDeleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {},
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('tables')))]",
                      "type": "Microsoft.Storage/storageAccounts/tableServices",
                      "apiVersion": "2023-01-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {},
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "accessTier": "[parameters('accessTier')]",
                        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                        "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                        "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                        "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                        "dnsEndpointType": "[parameters('dnsEndpointType')]",
                        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                        "networkAcls": "[parameters('networkAcls')]",
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-01-01').primaryEndpoints]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsName')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "logAnalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "15997694026790270497"
                    },
                    "description": "Creates a Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-12-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[and(not(empty(parameters('applicationInsightsName'))), not(empty(parameters('logAnalyticsName'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationInsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "logAnalyticsWorkspaceId": "[if(not(empty(parameters('logAnalyticsName'))), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.id.value), createObject('value', ''))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "4092214315482652757"
                    },
                    "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('dashboardName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12758358495379445390"
                            },
                            "description": "Creates a dashboard for an Application Insights instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                          "asset": {
                                            "idInputName": "id",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "overview"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "ProactiveDetection"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "failures"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "performance"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "browser"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'logAnalytics')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cognitiveServices",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "aiServiceName": {
                    "value": "[parameters('aiServicesName')]"
                  },
                  "aiProjectName": {
                    "value": "[parameters('aiProjectName')]"
                  },
                  "deployments": {
                    "value": "[parameters('aiServiceModelDeployments')]"
                  },
                  "appInsightsId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.id.value]"
                  },
                  "appInsightConnectionName": {
                    "value": "[parameters('appInsightConnectionName')]"
                  },
                  "appInsightConnectionString": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.connectionString.value]"
                  },
                  "storageAccountId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.id.value]"
                  },
                  "storageAccountConnectionName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.name.value]"
                  },
                  "aoaiConnectionName": {
                    "value": "[parameters('aoaiConnectionName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "4160265819087203578"
                    },
                    "description": "Creates an Azure Cognitive Services instance."
                  },
                  "parameters": {
                    "aiServiceName": {
                      "type": "string"
                    },
                    "aiProjectName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "customSubDomainName": {
                      "type": "string",
                      "defaultValue": "[parameters('aiServiceName')]",
                      "metadata": {
                        "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
                      }
                    },
                    "disableLocalAuth": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "deployments": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "appInsightsId": {
                      "type": "string"
                    },
                    "appInsightConnectionString": {
                      "type": "string"
                    },
                    "appInsightConnectionName": {
                      "type": "string"
                    },
                    "aoaiConnectionName": {
                      "type": "string"
                    },
                    "storageAccountId": {
                      "type": "string"
                    },
                    "storageAccountConnectionName": {
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "S0"
                      }
                    },
                    "allowedIpRules": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "networkAcls": {
                      "type": "object",
                      "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.CognitiveServices/accounts",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[parameters('aiServiceName')]",
                      "location": "[parameters('location')]",
                      "sku": "[parameters('sku')]",
                      "kind": "AIServices",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "allowProjectManagement": true,
                        "customSubDomainName": "[parameters('customSubDomainName')]",
                        "networkAcls": "[parameters('networkAcls')]",
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "disableLocalAuth": "[parameters('disableLocalAuth')]"
                      }
                    },
                    {
                      "type": "Microsoft.CognitiveServices/accounts/connections",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[format('{0}/{1}', parameters('aiServiceName'), parameters('aoaiConnectionName'))]",
                      "properties": {
                        "category": "AzureOpenAI",
                        "authType": "AAD",
                        "isSharedToAll": true,
                        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName')), '2025-04-01-preview').endpoints['OpenAI Language Model Instance API']]",
                        "metadata": {
                          "ApiType": "azure",
                          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.CognitiveServices/accounts/connections",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[format('{0}/{1}', parameters('aiServiceName'), parameters('appInsightConnectionName'))]",
                      "properties": {
                        "category": "AppInsights",
                        "target": "[parameters('appInsightsId')]",
                        "authType": "ApiKey",
                        "isSharedToAll": true,
                        "credentials": {
                          "key": "[parameters('appInsightConnectionString')]"
                        },
                        "metadata": {
                          "ApiType": "Azure",
                          "ResourceId": "[parameters('appInsightsId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.CognitiveServices/accounts/connections",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[format('{0}/{1}', parameters('aiServiceName'), parameters('storageAccountConnectionName'))]",
                      "properties": {
                        "category": "AzureStorageAccount",
                        "target": "[parameters('storageAccountId')]",
                        "authType": "AAD",
                        "isSharedToAll": true,
                        "metadata": {
                          "ApiType": "Azure",
                          "ResourceId": "[parameters('storageAccountId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.CognitiveServices/accounts/projects",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[format('{0}/{1}', parameters('aiServiceName'), parameters('aiProjectName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "description": "[parameters('aiProjectName')]",
                        "displayName": "[parameters('aiProjectName')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "aiServicesDeployments",
                        "count": "[length(parameters('deployments'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.CognitiveServices/accounts/deployments",
                      "apiVersion": "2024-10-01",
                      "name": "[format('{0}/{1}', parameters('aiServiceName'), parameters('deployments')[copyIndex()].name)]",
                      "properties": {
                        "model": "[parameters('deployments')[copyIndex()].model]",
                        "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
                      },
                      "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName')), '2025-04-01-preview').endpoint]"
                    },
                    "endpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName')), '2025-04-01-preview').endpoints]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('aiServiceName')]"
                    },
                    "projectResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.CognitiveServices/accounts/projects', parameters('aiServiceName'), parameters('aiProjectName'))]"
                    },
                    "projectName": {
                      "type": "string",
                      "value": "[parameters('aiProjectName')]"
                    },
                    "serviceName": {
                      "type": "string",
                      "value": "[parameters('aiServiceName')]"
                    },
                    "projectEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts/projects', parameters('aiServiceName'), parameters('aiProjectName')), '2025-04-01-preview').endpoints['AI Foundry API']]"
                    },
                    "PrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName')), '2025-04-01-preview', 'full').identity.principalId]"
                    },
                    "accountPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServiceName')), '2025-04-01-preview', 'full').identity.principalId]"
                    },
                    "projectPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts/projects', parameters('aiServiceName'), parameters('aiProjectName')), '2025-04-01-preview', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'applicationInsights')]",
                "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ai-account-role-storage-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.accountPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11549847967835635660"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User",
                        ""
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cognitiveServices')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "ai-project-role-storage-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.projectPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11549847967835635660"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User",
                        ""
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cognitiveServices')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('searchServiceName')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "searchService",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('searchServiceName')]"
                  },
                  "semanticSearch": {
                    "value": "free"
                  },
                  "authOptions": {
                    "value": {
                      "aadOrApiKey": {
                        "aadAuthFailureMode": "http401WithBearerChallenge"
                      }
                    }
                  },
                  "projectName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.projectName.value]"
                  },
                  "serviceName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.serviceName.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "12350250757193510107"
                    },
                    "description": "Creates an Azure AI Search instance."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "projectName": {
                      "type": "string"
                    },
                    "serviceName": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "standard"
                      }
                    },
                    "authOptions": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "disableLocalAuth": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "disabledDataExfiltrationOptions": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "encryptionWithCmk": {
                      "type": "object",
                      "defaultValue": {
                        "enforcement": "Unspecified"
                      }
                    },
                    "hostingMode": {
                      "type": "string",
                      "defaultValue": "default",
                      "allowedValues": [
                        "default",
                        "highDensity"
                      ]
                    },
                    "networkRuleSet": {
                      "type": "object",
                      "defaultValue": {
                        "bypass": "None",
                        "ipRules": []
                      }
                    },
                    "partitionCount": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "enabled",
                      "allowedValues": [
                        "enabled",
                        "disabled"
                      ]
                    },
                    "replicaCount": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "semanticSearch": {
                      "type": "string",
                      "defaultValue": "disabled",
                      "allowedValues": [
                        "disabled",
                        "free",
                        "standard"
                      ]
                    }
                  },
                  "variables": {
                    "searchIdentityProvider": "[if(equals(parameters('sku').name, 'free'), null(), createObject('type', 'SystemAssigned'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.CognitiveServices/accounts/projects/connections",
                      "apiVersion": "2025-04-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('serviceName'), parameters('projectName'), 'searchConnection')]",
                      "properties": {
                        "category": "CognitiveSearch",
                        "authType": "ApiKey",
                        "isSharedToAll": true,
                        "target": "[format('https://{0}.search.windows.net/', parameters('name'))]",
                        "credentials": {
                          "key": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('name')), '2024-06-01-preview').primaryKey]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Search/searchServices",
                      "apiVersion": "2024-06-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "basic"
                      },
                      "identity": "[variables('searchIdentityProvider')]",
                      "properties": {
                        "authOptions": "[parameters('authOptions')]",
                        "disableLocalAuth": "[parameters('disableLocalAuth')]",
                        "disabledDataExfiltrationOptions": "[parameters('disabledDataExfiltrationOptions')]",
                        "encryptionWithCmk": "[parameters('encryptionWithCmk')]",
                        "hostingMode": "[parameters('hostingMode')]",
                        "networkRuleSet": "[parameters('networkRuleSet')]",
                        "partitionCount": "[parameters('partitionCount')]",
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "replicaCount": "[parameters('replicaCount')]",
                        "semanticSearch": "[parameters('semanticSearch')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
                    },
                    "endpoint": {
                      "type": "string",
                      "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[if(not(empty(variables('searchIdentityProvider'))), reference(resourceId('Microsoft.Search/searchServices', parameters('name')), '2024-06-01-preview', 'full').identity.principalId, '')]"
                    },
                    "searchConnectionId": {
                      "type": "string",
                      "value": ""
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cognitiveServices')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.id.value]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.name.value]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[if(not(empty(parameters('applicationInsightsName'))), reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.id.value, '')]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[if(not(empty(parameters('applicationInsightsName'))), reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.name.value, '')]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[if(not(empty(parameters('logAnalyticsName'))), reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.id.value, '')]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[if(not(empty(parameters('logAnalyticsName'))), reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.name.value, '')]"
            },
            "aiServiceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.id.value]"
            },
            "aiServicesName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.name.value]"
            },
            "aiProjectEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.projectEndpoint.value]"
            },
            "aiServicePrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.accountPrincipalId.value]"
            },
            "searchServiceId": {
              "type": "string",
              "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'searchService'), '2022-09-01').outputs.id.value, '')]"
            },
            "searchServiceName": {
              "type": "string",
              "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'searchService'), '2022-09-01').outputs.name.value, '')]"
            },
            "searchServiceEndpoint": {
              "type": "string",
              "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'searchService'), '2022-09-01').outputs.endpoint.value, '')]"
            },
            "projectResourceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.projectResourceId.value]"
            },
            "searchConnectionId": {
              "type": "string",
              "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'searchService'), '2022-09-01').outputs.searchConnectionId.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('azureExistingAIProjectResourceId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "name": {
            "value": "[variables('logAnalyticsWorkspaceResolvedName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "15997694026790270497"
            },
            "description": "Creates a Log Analytics workspace."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(variables('resolvedApplicationInsightsName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoringmetricscontributor-role-azureai-developer-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "appInsightsName": {
            "value": "[variables('resolvedApplicationInsightsName')]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "12462599715460990833"
            },
            "description": "Assigns MonitoringMetricsContributor role to Application Insights."
          },
          "parameters": {
            "appInsightsName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            }
          },
          "variables": {
            "monitoringMetricsContributorRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Insights/components/{0}', parameters('appInsightsName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('monitoringMetricsContributorRole'))]",
              "properties": {
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[variables('monitoringMetricsContributorRole')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('azureExistingAIProjectResourceId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-azureai-developer-existing-project-rg",
      "resourceGroup": "[split(parameters('azureExistingAIProjectResourceId'), '/')[4]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "64702f94-c441-49e6-a78b-ef80e0188fee"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-apps",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "app"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containerRegistryName": {
            "value": "[format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "containerAppsEnvironmentName": {
            "value": "[format('containerapps-env-{0}', variables('resourceToken'))]"
          },
          "logAnalyticsWorkspaceName": "[if(empty(parameters('azureExistingAIProjectResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.name.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "17702351436672535359"
            },
            "description": "Creates an Azure Container Registry and an Azure Container Apps environment."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "containerRegistryAdminUserEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-apps-environment', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('logAnalyticsWorkspaceName')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "8419952298053308912"
                    },
                    "description": "Creates an Azure Container Apps environment."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Application Insights resource"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if Dapr is enabled"
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Log Analytics workspace"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/managedEnvironments",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "appLogsConfiguration": {
                          "destination": "log-analytics",
                          "logAnalyticsConfiguration": {
                            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                          }
                        },
                        "daprAIInstrumentationKey": "[if(and(parameters('daprEnabled'), not(empty(parameters('applicationInsightsName')))), reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, '')]"
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2023-05-01').defaultDomain]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-registry', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "adminUserEnabled": {
                    "value": "[parameters('containerRegistryAdminUserEnabled')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "7478263124271405840"
                    },
                    "description": "Creates an Azure Container Registry."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "adminUserEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether admin user is enabled"
                      }
                    },
                    "anonymousPullEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether anonymous pull is enabled"
                      }
                    },
                    "azureADAuthenticationAsArmPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "enabled"
                      },
                      "metadata": {
                        "description": "Azure ad authentication as arm policy settings"
                      }
                    },
                    "dataEndpointEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether data endpoint is enabled"
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Encryption settings"
                      }
                    },
                    "exportPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "enabled"
                      },
                      "metadata": {
                        "description": "Export policy settings"
                      }
                    },
                    "metadataSearch": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Metadata search settings"
                      }
                    },
                    "networkRuleBypassOptions": {
                      "type": "string",
                      "defaultValue": "AzureServices",
                      "metadata": {
                        "description": "Options for bypassing network rules"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "metadata": {
                        "description": "Public network access setting"
                      }
                    },
                    "quarantinePolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Quarantine policy settings"
                      }
                    },
                    "retentionPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "days": 7,
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Retention policy settings"
                      }
                    },
                    "scopeMaps": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Scope maps setting"
                      }
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Basic"
                      },
                      "metadata": {
                        "description": "SKU settings"
                      }
                    },
                    "softDeletePolicy": {
                      "type": "object",
                      "defaultValue": {
                        "retentionDays": 7,
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Soft delete policy settings"
                      }
                    },
                    "trustPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "type": "Notary",
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Trust policy settings"
                      }
                    },
                    "zoneRedundancy": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Zone redundancy setting"
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The log analytics workspace ID used for logging and monitoring"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "containerRegistry::scopeMap",
                        "count": "[length(parameters('scopeMaps'))]"
                      },
                      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
                      "apiVersion": "2023-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), parameters('scopeMaps')[copyIndex()].name)]",
                      "properties": "[parameters('scopeMaps')[copyIndex()].properties]",
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2023-11-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "adminUserEnabled": "[parameters('adminUserEnabled')]",
                        "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                        "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                        "encryption": "[parameters('encryption')]",
                        "metadataSearch": "[parameters('metadataSearch')]",
                        "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                        "policies": {
                          "quarantinePolicy": "[parameters('quarantinePolicy')]",
                          "trustPolicy": "[parameters('trustPolicy')]",
                          "retentionPolicy": "[parameters('retentionPolicy')]",
                          "exportPolicy": "[parameters('exportPolicy')]",
                          "azureADAuthenticationAsArmPolicy": "[parameters('azureADAuthenticationAsArmPolicy')]",
                          "softDeletePolicy": "[parameters('softDeletePolicy')]"
                        },
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "zoneRedundancy": "[parameters('zoneRedundancy')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('workspaceId')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
                      "name": "registry-diagnostics",
                      "properties": {
                        "workspaceId": "[parameters('workspaceId')]",
                        "logs": [
                          {
                            "category": "ContainerRegistryRepositoryEvents",
                            "enabled": true
                          },
                          {
                            "category": "ContainerRegistryLoginEvents",
                            "enabled": true
                          }
                        ],
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true,
                            "timeGrain": "PT1M"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                    },
                    "loginServer": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.defaultDomain.value]"
            },
            "environmentName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "environmentId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.id.value]"
            },
            "registryLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.loginServer.value]"
            },
            "registryName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'logAnalytics')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "api",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('ca-api-{0}', variables('resourceToken'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "identityName": {
            "value": "[format('{0}api-{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]"
          },
          "containerAppsEnvironmentName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
          },
          "azureExistingAIProjectResourceId": "[if(not(empty(parameters('azureExistingAIProjectResourceId'))), createObject('value', parameters('azureExistingAIProjectResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.projectResourceId.value))]",
          "containerRegistryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
          },
          "agentDeploymentName": {
            "value": "[parameters('agentDeploymentName')]"
          },
          "searchConnectionName": {
            "value": "[parameters('searchConnectionName')]"
          },
          "aiSearchIndexName": {
            "value": "[parameters('aiSearchIndexName')]"
          },
          "searchServiceEndpoint": "[if(not(parameters('useSearchService')), createObject('value', ''), if(empty(parameters('azureExistingAIProjectResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.searchServiceEndpoint.value), createObject('value', '')))]",
          "embeddingDeploymentName": {
            "value": "[parameters('embeddingDeploymentName')]"
          },
          "embeddingDeploymentDimensions": {
            "value": "[parameters('embeddingDeploymentDimensions')]"
          },
          "agentName": {
            "value": "[parameters('agentName')]"
          },
          "agentID": {
            "value": "[variables('agentID')]"
          },
          "enableAzureMonitorTracing": {
            "value": "[parameters('enableAzureMonitorTracing')]"
          },
          "azureTracingGenAIContentRecordingEnabled": {
            "value": "[parameters('azureTracingGenAIContentRecordingEnabled')]"
          },
          "projectEndpoint": "[if(not(empty(parameters('azureExistingAIProjectResourceId'))), createObject('value', variables('existingProjEndpoint')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.aiProjectEndpoint.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "15548178574326599446"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerRegistryName": {
              "type": "string"
            },
            "identityName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "azureExistingAIProjectResourceId": {
              "type": "string"
            },
            "agentDeploymentName": {
              "type": "string"
            },
            "searchConnectionName": {
              "type": "string"
            },
            "embeddingDeploymentName": {
              "type": "string"
            },
            "aiSearchIndexName": {
              "type": "string"
            },
            "embeddingDeploymentDimensions": {
              "type": "string"
            },
            "searchServiceEndpoint": {
              "type": "string"
            },
            "agentName": {
              "type": "string"
            },
            "agentID": {
              "type": "string"
            },
            "enableAzureMonitorTracing": {
              "type": "bool"
            },
            "azureTracingGenAIContentRecordingEnabled": {
              "type": "bool"
            },
            "projectEndpoint": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "container-app-module",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', 'api_and_frontend'))]"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "targetPort": {
                    "value": 50505
                  },
                  "env": {
                    "value": [
                      {
                        "name": "AZURE_CLIENT_ID",
                        "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId]"
                      },
                      {
                        "name": "AZURE_EXISTING_AIPROJECT_RESOURCE_ID",
                        "value": "[parameters('azureExistingAIProjectResourceId')]"
                      },
                      {
                        "name": "AZURE_AI_AGENT_NAME",
                        "value": "[parameters('agentName')]"
                      },
                      {
                        "name": "AZURE_EXISTING_AGENT_ID",
                        "value": "[parameters('agentID')]"
                      },
                      {
                        "name": "AZURE_AI_AGENT_DEPLOYMENT_NAME",
                        "value": "[parameters('agentDeploymentName')]"
                      },
                      {
                        "name": "AZURE_AI_EMBED_DEPLOYMENT_NAME",
                        "value": "[parameters('embeddingDeploymentName')]"
                      },
                      {
                        "name": "AZURE_AI_SEARCH_INDEX_NAME",
                        "value": "[parameters('aiSearchIndexName')]"
                      },
                      {
                        "name": "AZURE_AI_EMBED_DIMENSIONS",
                        "value": "[parameters('embeddingDeploymentDimensions')]"
                      },
                      {
                        "name": "RUNNING_IN_PRODUCTION",
                        "value": "true"
                      },
                      {
                        "name": "AZURE_AI_SEARCH_CONNECTION_NAME",
                        "value": "[parameters('searchConnectionName')]"
                      },
                      {
                        "name": "AZURE_AI_SEARCH_ENDPOINT",
                        "value": "[parameters('searchServiceEndpoint')]"
                      },
                      {
                        "name": "ENABLE_AZURE_MONITOR_TRACING",
                        "value": "[parameters('enableAzureMonitorTracing')]"
                      },
                      {
                        "name": "AZURE_TRACING_GEN_AI_CONTENT_RECORDING_ENABLED",
                        "value": "[parameters('azureTracingGenAIContentRecordingEnabled')]"
                      },
                      {
                        "name": "AZURE_EXISTING_AIPROJECT_ENDPOINT",
                        "value": "[parameters('projectEndpoint')]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17085388670099988430"
                    },
                    "description": "Creates or updates an existing Azure Container App."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "metadata": {
                        "description": "The environment name for the container apps"
                      }
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "The number of CPU cores allocated to a single container instance, e.g., 0.5"
                      }
                    },
                    "containerMaxReplicas": {
                      "type": "int",
                      "defaultValue": 10,
                      "minValue": 1,
                      "metadata": {
                        "description": "The maximum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "The amount of memory allocated to a single container instance, e.g., 1Gi"
                      }
                    },
                    "containerMinReplicas": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "metadata": {
                        "description": "The minimum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main",
                      "metadata": {
                        "description": "The name of the container"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the container registry"
                      }
                    },
                    "containerRegistryHostSuffix": {
                      "type": "string",
                      "defaultValue": "azurecr.io",
                      "metadata": {
                        "description": "Hostname suffix for container registry. Set when deploying to sovereign clouds"
                      }
                    },
                    "daprAppProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "allowedValues": [
                        "http",
                        "grpc"
                      ],
                      "metadata": {
                        "description": "The protocol used by Dapr to connect to the app, e.g., HTTP or gRPC"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable or disable Dapr for the container app"
                      }
                    },
                    "daprAppId": {
                      "type": "string",
                      "defaultValue": "[parameters('containerName')]",
                      "metadata": {
                        "description": "The Dapr app ID"
                      }
                    },
                    "ingressEnabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if Ingress is enabled for the container app"
                      }
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "metadata": {
                        "description": "The type of identity for the resource"
                      }
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the user-assigned identity"
                      }
                    },
                    "imageName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container image"
                      }
                    },
                    "secrets": {
                      "type": "secureObject",
                      "defaultValue": {},
                      "metadata": {
                        "description": "The secrets required for the container"
                      }
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The environment variables for the container"
                      }
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if the resource ingress is exposed externally"
                      }
                    },
                    "serviceBinds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The service binds associated with the container"
                      }
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "The target port for the container"
                      }
                    },
                    "exists": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if the resource already exists"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-update', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "identityType": {
                            "value": "[parameters('identityType')]"
                          },
                          "identityName": {
                            "value": "[parameters('identityName')]"
                          },
                          "ingressEnabled": {
                            "value": "[parameters('ingressEnabled')]"
                          },
                          "containerName": {
                            "value": "[parameters('containerName')]"
                          },
                          "containerAppsEnvironmentName": {
                            "value": "[parameters('containerAppsEnvironmentName')]"
                          },
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "containerRegistryHostSuffix": {
                            "value": "[parameters('containerRegistryHostSuffix')]"
                          },
                          "containerCpuCoreCount": {
                            "value": "[parameters('containerCpuCoreCount')]"
                          },
                          "containerMemory": {
                            "value": "[parameters('containerMemory')]"
                          },
                          "containerMinReplicas": {
                            "value": "[parameters('containerMinReplicas')]"
                          },
                          "containerMaxReplicas": {
                            "value": "[parameters('containerMaxReplicas')]"
                          },
                          "daprEnabled": {
                            "value": "[parameters('daprEnabled')]"
                          },
                          "daprAppId": {
                            "value": "[parameters('daprAppId')]"
                          },
                          "daprAppProtocol": {
                            "value": "[parameters('daprAppProtocol')]"
                          },
                          "secrets": {
                            "value": "[parameters('secrets')]"
                          },
                          "external": {
                            "value": "[parameters('external')]"
                          },
                          "env": {
                            "value": "[parameters('env')]"
                          },
                          "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), if(parameters('exists'), createObject('value', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-02-preview').template.containers[0].image), createObject('value', '')))]",
                          "targetPort": {
                            "value": "[parameters('targetPort')]"
                          },
                          "serviceBinds": {
                            "value": "[parameters('serviceBinds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "8233768301713088355"
                            },
                            "description": "Creates a container app in an Azure Container App environment."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Allowed origins"
                              }
                            },
                            "containerAppsEnvironmentName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the environment for container apps"
                              }
                            },
                            "containerCpuCoreCount": {
                              "type": "string",
                              "defaultValue": "0.5",
                              "metadata": {
                                "description": "CPU cores allocated to a single container instance, e.g., 0.5"
                              }
                            },
                            "containerMaxReplicas": {
                              "type": "int",
                              "defaultValue": 10,
                              "minValue": 1,
                              "metadata": {
                                "description": "The maximum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerMemory": {
                              "type": "string",
                              "defaultValue": "1.0Gi",
                              "metadata": {
                                "description": "Memory allocated to a single container instance, e.g., 1Gi"
                              }
                            },
                            "containerMinReplicas": {
                              "type": "int",
                              "defaultValue": 1,
                              "metadata": {
                                "description": "The minimum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "main",
                              "metadata": {
                                "description": "The name of the container"
                              }
                            },
                            "containerRegistryName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container registry"
                              }
                            },
                            "containerRegistryHostSuffix": {
                              "type": "string",
                              "defaultValue": "azurecr.io",
                              "metadata": {
                                "description": "Hostname suffix for container registry. Set when deploying to sovereign clouds"
                              }
                            },
                            "daprAppProtocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "allowedValues": [
                                "http",
                                "grpc"
                              ],
                              "metadata": {
                                "description": "The protocol used by Dapr to connect to the app, e.g., http or grpc"
                              }
                            },
                            "daprAppId": {
                              "type": "string",
                              "defaultValue": "[parameters('containerName')]",
                              "metadata": {
                                "description": "The Dapr app ID"
                              }
                            },
                            "daprEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Enable Dapr"
                              }
                            },
                            "env": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The environment variables for the container"
                              }
                            },
                            "external": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if the resource ingress is exposed externally"
                              }
                            },
                            "identityName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the user-assigned identity"
                              }
                            },
                            "identityType": {
                              "type": "string",
                              "defaultValue": "None",
                              "allowedValues": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "metadata": {
                                "description": "The type of identity for the resource"
                              }
                            },
                            "imageName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container image"
                              }
                            },
                            "ingressEnabled": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if Ingress is enabled for the container app"
                              }
                            },
                            "revisionMode": {
                              "type": "string",
                              "defaultValue": "Single"
                            },
                            "dependOn": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "secrets": {
                              "type": "secureObject",
                              "defaultValue": {},
                              "metadata": {
                                "description": "The secrets required for the container"
                              }
                            },
                            "serviceBinds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The service binds associated with the container"
                              }
                            },
                            "serviceType": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container apps add-on to use. e.g. redis"
                              }
                            },
                            "targetPort": {
                              "type": "int",
                              "defaultValue": 80,
                              "metadata": {
                                "description": "The target port for the container"
                              }
                            }
                          },
                          "variables": {
                            "usePrivateRegistry": "[and(not(empty(parameters('identityName'))), not(empty(parameters('containerRegistryName'))))]",
                            "normalizedIdentityType": "[if(not(empty(parameters('identityName'))), 'UserAssigned', parameters('identityType'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.App/containerApps",
                              "apiVersion": "2023-05-02-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[variables('normalizedIdentityType')]",
                                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(variables('normalizedIdentityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                              },
                              "properties": {
                                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                                "configuration": {
                                  "copy": [
                                    {
                                      "name": "secrets",
                                      "count": "[length(items(parameters('secrets')))]",
                                      "input": {
                                        "name": "[items(parameters('secrets'))[copyIndex('secrets')].key]",
                                        "value": "[items(parameters('secrets'))[copyIndex('secrets')].value]"
                                      }
                                    }
                                  ],
                                  "activeRevisionsMode": "[parameters('revisionMode')]",
                                  "ingress": "[if(parameters('ingressEnabled'), createObject('external', parameters('external'), 'targetPort', parameters('targetPort'), 'transport', 'auto', 'corsPolicy', createObject('allowedOrigins', union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins')))), null())]",
                                  "dapr": "[if(parameters('daprEnabled'), createObject('enabled', true(), 'appId', parameters('daprAppId'), 'appProtocol', parameters('daprAppProtocol'), 'appPort', if(parameters('ingressEnabled'), parameters('targetPort'), 0)), createObject('enabled', false()))]",
                                  "service": "[if(not(empty(parameters('serviceType'))), createObject('type', parameters('serviceType')), null())]",
                                  "registries": "[if(variables('usePrivateRegistry'), createArray(createObject('server', format('{0}.{1}', parameters('containerRegistryName'), parameters('containerRegistryHostSuffix')), 'identity', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))), createArray())]"
                                },
                                "template": {
                                  "serviceBinds": "[if(not(empty(parameters('serviceBinds'))), parameters('serviceBinds'), null())]",
                                  "containers": [
                                    {
                                      "image": "[if(not(empty(parameters('imageName'))), parameters('imageName'), 'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest')]",
                                      "name": "[parameters('containerName')]",
                                      "env": "[parameters('env')]",
                                      "resources": {
                                        "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                        "memory": "[parameters('containerMemory')]"
                                      }
                                    }
                                  ],
                                  "scale": {
                                    "minReplicas": "[parameters('containerMinReplicas')]",
                                    "maxReplicas": "[parameters('containerMaxReplicas')]"
                                  }
                                }
                              }
                            },
                            {
                              "condition": "[variables('usePrivateRegistry')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-registry-access', deployment().name)]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "containerRegistryName": {
                                    "value": "[parameters('containerRegistryName')]"
                                  },
                                  "principalId": "[if(variables('usePrivateRegistry'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', ''))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "17212244635106074430"
                                    },
                                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                                  },
                                  "parameters": {
                                    "containerRegistryName": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2022-04-01",
                                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                                      "properties": {
                                        "roleDefinitionId": "[variables('acrPullRole')]",
                                        "principalType": "ServicePrincipal",
                                        "principalId": "[parameters('principalId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "defaultDomain": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName')), '2023-05-01').defaultDomain]"
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(variables('normalizedIdentityType'), 'None'), '', if(empty(parameters('identityName')), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-02-preview', 'full').identity.principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "serviceBind": {
                              "type": "object",
                              "value": "[if(not(empty(parameters('serviceType'))), createObject('serviceId', resourceId('Microsoft.App/containerApps', parameters('name')), 'name', parameters('name')), createObject())]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[if(parameters('ingressEnabled'), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-02-preview').configuration.ingress.fqdn), '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.defaultDomain.value]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
              ]
            }
          ],
          "outputs": {
            "SERVICE_API_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId]"
            },
            "SERVICE_API_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-app-module'), '2022-09-01').outputs.name.value]"
            },
            "SERVICE_API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-app-module'), '2022-09-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'container-apps')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('enableAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apim",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('apim-{0}', variables('resourceToken'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "publisherName": {
            "value": "[parameters('apimPublisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('apimPublisherEmail')]"
          },
          "sku": {
            "value": "[parameters('apimSku')]"
          },
          "backendApiUrl": {
            "value": "[format('https://{0}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value)]"
          },
          "enableCors": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "2857424727062780844"
            },
            "description": "Creates an Azure API Management instance."
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the API Management service instance"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location of the API Management service instance"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The tags to apply to the API Management service instance"
              }
            },
            "publisherEmail": {
              "type": "string",
              "metadata": {
                "description": "The email address of the owner of the service"
              }
            },
            "publisherName": {
              "type": "string",
              "metadata": {
                "description": "The name of the owner of the service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Consumption",
              "allowedValues": [
                "Consumption",
                "Developer",
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "The pricing tier of this API Management service"
              }
            },
            "capacity": {
              "type": "int",
              "defaultValue": 0,
              "metadata": {
                "description": "The instance size of this API Management service"
              }
            },
            "backendApiUrl": {
              "type": "string",
              "metadata": {
                "description": "The backend API base URL"
              }
            },
            "enableCors": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable CORS policy"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2023-05-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[parameters('capacity')]"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "notificationSenderEmail": "[parameters('publisherEmail')]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/backends",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), 'fastapi-backend')]",
              "properties": {
                "description": "FastAPI Backend Service",
                "url": "[parameters('backendApiUrl')]",
                "protocol": "http"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), 'agents-api')]",
              "properties": {
                "displayName": "AI Agents API",
                "description": "API for AI Agents service",
                "path": "api",
                "protocols": [
                  "https"
                ],
                "subscriptionRequired": false,
                "serviceUrl": "[parameters('backendApiUrl')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'agents-api', 'chat')]",
              "properties": {
                "displayName": "Chat with Agent",
                "method": "POST",
                "urlTemplate": "/chat",
                "description": "Send a message to the AI agent",
                "request": {
                  "headers": [
                    {
                      "name": "Content-Type",
                      "type": "string",
                      "defaultValue": "application/json",
                      "required": true
                    }
                  ]
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Successful response",
                    "headers": [
                      {
                        "name": "Content-Type",
                        "type": "string",
                        "defaultValue": "text/event-stream"
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), 'agents-api')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'agents-api', 'chat-history')]",
              "properties": {
                "displayName": "Get Chat History",
                "method": "GET",
                "urlTemplate": "/chat/history",
                "description": "Get chat history for the current session"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), 'agents-api')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'agents-api', 'get-agent')]",
              "properties": {
                "displayName": "Get Agent Details",
                "method": "GET",
                "urlTemplate": "/agent",
                "description": "Get agent configuration details"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), 'agents-api')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'agents-api', 'azure-config')]",
              "properties": {
                "displayName": "Get Azure Configuration",
                "method": "GET",
                "urlTemplate": "/config/azure",
                "description": "Get Azure configuration for frontend"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), 'agents-api')]"
              ]
            },
            {
              "condition": "[parameters('enableCors')]",
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'agents-api', 'policy')]",
              "properties": {
                "value": "<policies>\n  <inbound>\n    <cors allow-credentials=\"true\">\n      <allowed-origins>\n        <origin>*</origin>\n      </allowed-origins>\n      <allowed-methods>\n        <method>GET</method>\n        <method>POST</method>\n        <method>PUT</method>\n        <method>DELETE</method>\n        <method>OPTIONS</method>\n      </allowed-methods>\n      <allowed-headers>\n        <header>*</header>\n      </allowed-headers>\n    </cors>\n    <set-backend-service backend-id=\"fastapi-backend\" />\n    <base />\n  </inbound>\n  <backend>\n    <base />\n  </backend>\n  <outbound>\n    <base />\n  </outbound>\n  <on-error>\n    <base />\n  </on-error>\n</policies>\n"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), 'agents-api')]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "gatewayUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-05-01-preview').gatewayUrl]"
            },
            "portalUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-05-01-preview').portalUrl]"
            },
            "managementApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-05-01-preview').managementApiUrl]"
            },
            "scmUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-05-01-preview').scmUrl]"
            },
            "systemAssignedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-05-01-preview', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-azureai-developer",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "64702f94-c441-49e6-a78b-ef80e0188fee"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[empty(parameters('azureExistingAIProjectResourceId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-cognitive-services-user",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[empty(parameters('azureExistingAIProjectResourceId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-azure-ai-user",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "53ca6127-db72-4b80-b1b0-d745d6d5456d"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[empty(parameters('azureExistingAIProjectResourceId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-cognitive-services-user",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('azureExistingAIProjectResourceId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-cognitive-services-user2",
      "resourceGroup": "[split(parameters('azureExistingAIProjectResourceId'), '/')[4]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-azure-index-data-contributor-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-azure-index-data-reader-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-azure-search-service-contributor-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-azure-index-data-contributor-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-azure-index-data-reader-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "condition": "[parameters('useSearchService')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-role-azure-search-service-contributor-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "[variables('runnerPrincipalType')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-role-azureai-developer-rg",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalType": {
            "value": "ServicePrincipal"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
          },
          "roleDefinitionId": {
            "value": "64702f94-c441-49e6-a78b-ef80e0188fee"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "11549847967835635660"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User",
                ""
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_EXISTING_AIPROJECT_RESOURCE_ID": {
      "type": "string",
      "value": "[if(not(empty(parameters('azureExistingAIProjectResourceId'))), parameters('azureExistingAIProjectResourceId'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.projectResourceId.value)]"
    },
    "AZURE_AI_AGENT_DEPLOYMENT_NAME": {
      "type": "string",
      "value": "[parameters('agentDeploymentName')]"
    },
    "AZURE_AI_SEARCH_CONNECTION_NAME": {
      "type": "string",
      "value": "[parameters('searchConnectionName')]"
    },
    "AZURE_AI_EMBED_DEPLOYMENT_NAME": {
      "type": "string",
      "value": "[parameters('embeddingDeploymentName')]"
    },
    "AZURE_AI_SEARCH_INDEX_NAME": {
      "type": "string",
      "value": "[parameters('aiSearchIndexName')]"
    },
    "AZURE_AI_SEARCH_ENDPOINT": {
      "type": "string",
      "value": "[if(not(parameters('useSearchService')), '', if(empty(parameters('azureExistingAIProjectResourceId')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.searchServiceEndpoint.value, ''))]"
    },
    "AZURE_AI_EMBED_DIMENSIONS": {
      "type": "string",
      "value": "[parameters('embeddingDeploymentDimensions')]"
    },
    "AZURE_AI_AGENT_NAME": {
      "type": "string",
      "value": "[parameters('agentName')]"
    },
    "AZURE_EXISTING_AGENT_ID": {
      "type": "string",
      "value": "[variables('agentID')]"
    },
    "AZURE_EXISTING_AIPROJECT_ENDPOINT": {
      "type": "string",
      "value": "[if(not(empty(parameters('azureExistingAIProjectResourceId'))), variables('existingProjEndpoint'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.aiProjectEndpoint.value)]"
    },
    "ENABLE_AZURE_MONITOR_TRACING": {
      "type": "bool",
      "value": "[parameters('enableAzureMonitorTracing')]"
    },
    "AZURE_TRACING_GEN_AI_CONTENT_RECORDING_ENABLED": {
      "type": "bool",
      "value": "[parameters('azureTracingGenAIContentRecordingEnabled')]"
    },
    "AZURE_CONTAINER_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
    },
    "SERVICE_API_IDENTITY_PRINCIPAL_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_IDENTITY_PRINCIPAL_ID.value]"
    },
    "SERVICE_API_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_NAME.value]"
    },
    "SERVICE_API_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value]"
    },
    "SERVICE_API_ENDPOINTS": {
      "type": "array",
      "value": [
        "[format('{0}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value)]"
      ]
    },
    "SEARCH_CONNECTION_ID": {
      "type": "string",
      "value": ""
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryLoginServer.value]"
    }
  }
}